# $Id: README.TeraGrid,v 1.9 2006-04-19 18:40:42-07 kst Exp $
# $Source: /home/kst/gx-map-redacted/README.TeraGrid,v $

Here is a set of cron jobs for SDSC's TeraGrid system,
tg-login2.sdsc.teragrid.org, running under the "gxmap" account.
Other TeraGrid sites should modify the paths and the namespace
argument.  Non-TeraGrid sites will require customization as well,
but can use this as a template.

The lines are shown here with '\' continuation characters.  Crontab
doesn't actualy allow this, so each command will need to be on a
single line.

Not all versions of crontab accept the "*/5" syntax.

# minute hour mday month wday command
*/5 * * * *   /usr/local/apps/gx-map-0.5.1/sbin/gx-gen-mapfile \
        /usr/local/apps/grid-security/grid-mapfile
15,45 * * * * /usr/local/apps/gx-map-0.5.1/sbin/gx-ca-update \
        -target-dir /usr/local/apps/grid-security/certificates \
        -ca-list /usr/local/apps/grid-security/certificates/.list

The gx-check-requests command is run on an internal SDSC machine, so
that command is not shown here; the data directory is shared between
SDSC's internal and TeraGrid systems.

The gx-gen-mapfile command generates (when necessary)
a new grid-mapfile.  I assume here that it's written
to the /usr/local/apps/grid-security directory; the file
/etc/grid-security/grid-mapfile then needs to be a symlink to
/usr/local/apps/grid-security/grid-mapfile.

The gx-ca-update command runs every 30 minutes and checks for
CRL (Certificate Revocation List) updates.  I recommend running
gx-ca-update once manually, with the "-verbose" option, to populate
the certificates directory and see what messages are produced, before
enabling the cron job.  The ".list" file contains a list of the CA
certificates to be installed; each CA is specified by its 8-digit hash.
This allows the set of supported CAs to be updated without modifying
the cron job.

For NCSA, the cron jobs might look like this:

# minute hour mday month wday command
*/5 * * * *   /usr/local/gx-map-0.5.1/sbin/gx-check-requests ; \
        /usr/local/gx-map-0.5.1/sbin/gx-gen-mapfile \
        /usr/local/grid-security/grid-mapfile
15,45 * * * * /usr/local/gx-map-0.5.1/sbin/gx-ca-update \
        -target-dir /usr/local/grid-security/certificates \
        -ca-list /usr/local/grid-security/certificates/.list

Note the addition of the "gx-check-requests" command.  The "-namespace"
option, required in gx-map release 0.4.X, is no longer required.

By default, gx-ca-update will not install a certificate if there is
no current corresponding CRL.  If a CRL expires and a new one is not
available, the old one will be left in place, effectively disabling all
certificates issued by the CA.  This behavior is designed to prevent
a revoked user or host certificate from being recognized (which is
the whole point of being able to revoke a certificate), but at the
cost of being unable to use potentially valid certificates in some
circumstances.

There are several options available if you wish to sacrifice security
for convenience.  See the gx-ca-update(8) man page for details.

The gx-ca-update command writes log messages to the file
gx-map-data/gx-ca-update.log under the gx-map installation directory.
In a future release, it may optionally use the syslog facility as well.

Cross-Site Propagation:
=======================

gx-map 0.5.1 includes support for cross-site propagation
of grid-mapfile entries, via an optional plug-in program
called "gx-propagate".  The TeraGrid-specific version is
"gx-propagate.in.teragrid", which can be specified in the installation
config file (see sample.conf).  By default, the gx-propagate command
is invoked by gx-check-requests for each validated request; use
"gx-check-requests -nopropagate" to disable this.  The gx-propagate
command submits information to the TGCDB (TeraGrid Central Database).
It requires a configuration file, "etc/gx-map/tgcdb.conf" to be
installed with permissions 400 or 600; this specifies information
about the database, including the password.

A sample tgcdb.conf file is:
================================
host	  db-server.example.edu
port	  9999
db	  example-db-name
resource  dtf.example.teragrid
user	  gxmap
passwd	  ********
================================
Consult the TeraGrid accounting group for the specific values to use.

gx-propagate propagates mappings from the local gx-map system into the
TGCDB.  In response to these updates, the TGCDB generates AMIE packets.
In particular, a RUM packet (Request User Modify) specifies a user's
Unix account name and a list of zero or more DNs.

IMPORTANT NOTE: The following is likely to change for release 0.5.2:
] The site-specific AMIE packet handler should invoke the gx-request
] command as follows:
] 
] gx-request -quiet -source TGCDB -set -user <USERNAME> [ -dn "<DN1>" -dn "<DN2>" ... ]
] 
] This effectively removes all mappings for the specified user, then
] adds a mapping for each specified DN.
] 
] To avoid an excessively long command line, you can write a list of
] DNs to a temporary file and use the "-dn-list-file" option:
] 
] gx-request -quiet -source TGCDB -set -user <USERNAME> -dn-list <TEMP_FILE>
] 
] The gx-request command must be invoked by a gx-map administrative
] account, one of the accounts specified by GX_MAP_OWNER or
] ADDITIONAL_ADMINS in the installation configuration file; this will
] typically be "gxmap" or "globus".  In particular, running this command
] as root will not work.
] 
] The "-source TGCDB" argument is important; it marks the request as
] one that is not to be re-propagated to the TGCDB.  The argument is
] case-sensitive; specify exactly TGCDB, not tgcdb.

Initial Deployment Plan:
========================

One obvious way to deploy gx-map 0.5.1 across TeraGrid sites would
be to install it, enable propagation via gx-propagate, and feed
the existing grid-mapfiles into the system via gx-ingest (see the
corresponding man pages for more information).  The problem with
this is that it would create a huge flurry of AMIE packets (at least
some of which need to be processed manually).

So the plan (at least at SDSC) is:

1. Install and deploy gx-map 0.5.1.  Use gx-convert-logs and
   gx-cleanup-log to create a new requests.log file (bypassing
   gx-check-requests and gx-propagate), so existing mappings
   are not propagated through the TGCDB.

2. Temporarily set up the cron job to invoke gx-check-requests with
   the "-nopropagate" option, so new mappings are not yet propagated
   either.

3. Generate the new grid-mapfiles and CA files in a new directory,
   *not* into /etc/grid-security.  Verify that the resulting
   grid-mapfiles are consistent with existing ones.

4. If everything seems to be working correctly, set up symlinks so that
   the new grid-mapfiles appear in /etc/grid-security on each system.

5. Meanwhile, test the propagation code.  Once that's reasonably well
   verified, remove the "-nopropagate" argument to gx-check-requests.
   From that point on, all new mappings should be propagated to
   all sites.

Teragrid sites other than SDSC can follow a similar procedure.

Note that the grid-mapfile subsystem is separate from gx-ca-update;
either can be deployed independently.  For example, if a site doesn't
choose to use gx-map to maintain its grid-mapfiles, it can still use
it to maintain its certificates directory, keeping CRLs up to date.

If you have any questions, please feel free to contact me.

                -- Keith Thompson <kst@sdsc.edu> Wed 2006-04-12
