#!/bin/sh

# $Id: make-release,v 1.36 2007-10-18 18:48:01-07 kst Exp $
# $Source: /home/kst/gx-map-redacted/make-release,v $

try() {
    echo "% $@"
    eval "$@" || exit 1
}

try_quietly() {
    if [ $verbose -eq 1 ] ; then
        echo "% $@"
    fi
    eval "$@" || exit 1
}

verbose=0
force=0
num=''

usage_message="Usage: $0 [-verbose] [-force] [num]"

for arg in "$@" ; do
    case "$arg" in
        -verbose)
            verbose=1
            ;;
        -force)
            force=1
            ;;
        [0-9]*)
            num=$arg
            ;;
        *)
            echo "$usage_message" 1>&2
            exit 1
            ;;
    esac
done
if [ "$num" = "" ] ; then
    num=`./get-version`
fi
if [ "$num" = "" ] ; then
    echo "Error getting version" 1>&2
    echo "$usage_message" 1>&2
    exit 1
fi

today=`date +%Y-%m-%d`

if [ -f release/gx-map-$num.tar.gz ] ; then
    if [ $force -eq 1 ] ; then
        try rm -f release/gx-map-$num.tar.gz
    else
        echo "release/gx-map-$num.tar.gz already exists" 1>&2
        exit 1
    fi
fi

cadesc_tarball=gx-map-cadesc-$today.tar.gz
if [ -f release/$cadesc_tarball ] ; then
    if [ $force -eq 0 ] ; then
        echo ">>> Using existing $cadesc_tarball"
    fi
else
    opts=''
    if [ $force -eq 1 ] ; then
        opts="$opts -force"
    fi
    if [ $verbose -eq 1 ] ; then
        opts="$opts -verbose"
    fi
    try ./make-cadesc-release $opts
fi

in_files=*.in
other_files="INSTALL LICENSE Makefile README README.TeraGrid \
             README.Upgrade Relnotes auto.txt cleanup-gx-map \
             configure-gx-map gettimeofday.c gx-check-prereqs \
             gx-propagate.in.teragrid gx-propagate.in.test \
             sample-gx-cron-job.conf test-gx-map \
             tgcdb.db-config get-version"

try mkdir release/gx-map-$num
try cd release/gx-map-$num

echo "... Copying *.in files"
for file in $in_files ; do
    try_quietly cp -p ../../$file .
done
echo "... Copying other files"
for file in $other_files ; do
    try_quietly cp -p ../../$file .
done

try cp -p ../$cadesc_tarball .

try mkdir bugs
try cd bugs
echo "... Copying bug-???? files"
ls ../../../bugs | grep '^bug-....$' | \
    while read file ; do
        try_quietly cp -p ../../../bugs/$file .
    done
try cd ..

try mkdir doc
try cd doc
echo "... Copying *.pod files"
ls ../../../doc | grep '\.pod$' | \
    while read file ; do
        try_quietly cp -p ../../../doc/$file .
    done
try cd ..

try cd ..
try tar zcf gx-map-$num.tar.gz gx-map-$num
try rm -rf gx-map-$num
