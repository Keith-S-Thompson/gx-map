#!%PERL% -wT

# $Id: gx-propagate.in.test,v 1.3 2005-11-10 17:50:29-08 kst Exp $
# $Source: /home/kst/gx-map-redacted/gx-propagate.in.test,v $

use strict;

########################################################################
# @Copyright@
#
# Copyright (c) 2005 The Regents of the University of California. All
# rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. All advertising materials mentioning features or use of this
# software must display the following acknowledgement: This product
# includes software developed by the Grid and Cluster Computing Group
# at the San Diego Supercomputer Center and its contributors.
#
# 4. Neither the name of the Center nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @Copyright@
########################################################################

########################################################################
# Developed by Keith Thompson <kst@sdsc.edu>
########################################################################

use File::Basename ();
use Getopt::Long ();

sub Usage(@);
# sub Get_TGCDB_Config($);
sub Quote(@);
# sub Init_Mappings();
# sub Get_User_List($);
# sub Get_DN_List($);
# sub Add_Mapping($$$);
# sub Remove_Mapping($$$);
sub Debug(@);
sub Debugf(@);

my $Install_Dir;
BEGIN {
    $Install_Dir = '%INSTALL_DIR%';
    unshift @INC, "$Install_Dir/lib";
}
use Gridmap_Utils ();

my $Program_Name = File::Basename::basename $0;
my @SAVED_ARGV = @ARGV;

my $User_Opt = {};
my @Opts = ( $User_Opt,
             qw( help
                 version
                 debugging
                 source=s
                 add
                 remove
                 remove-dn
                 remove-user
                 dn=s
                 username=s
                 dryrun ) );
Getopt::Long::GetOptions @Opts or Usage;
Usage if $User_Opt->{help};
Usage if @ARGV;

$| = 1 if $User_Opt->{debugging};

if ($User_Opt->{version}) {
    print "$Program_Name (gx-map) $Gridmap_Utils::VERSION\n";
    exit 0;
}

my $logfile = "$Install_Dir/var/gx-propagate.log";
open my $Log, ">>$logfile" or die "${logfile}: $!\n";
print $Log "\n", Gridmap_Utils::Time_Image time, "\n";
print $Log "$Program_Name ", Quote(@SAVED_ARGV), "\n";
close $Log;

if (defined $User_Opt->{dn} and $User_Opt->{dn} =~ /fail/i) {
    exit 1;
}
else {
    exit 0;
}

########################################################################

sub Quote(@) {
    my @args = @_;
    foreach my $arg (@args) {
        if ($arg =~ / /) {
            $arg = "\"$arg\"";
        }
    }
    return join ' ', @args;
} # Quote

# ----------------------------------------------------------------------

sub Debug(@) {
    print @_ if $User_Opt->{debugging};
} # Debug

# ----------------------------------------------------------------------

sub Debugf(@) {
    printf @_ if $User_Opt->{debugging};
} # Debugf

# ----------------------------------------------------------------------

sub Usage(@) {
    print @_ if @_;
    print <<"EOF";
Usage: $Program_Name -help|-version
       $Program_Name <operation> -username <name> -dn "string"
where <operation> is one of -add, -remove, -remove-dn, -remove-user

Propagate a mapping to an implementation-defined interface, such as
a cross-site user database.

This is a dummy version of the command; it merely appends information
to a log.

    -help           Show this message and exit.
    -version        Show version information and exit.
    -add            Add a mapping.
    -source         The source attribute of the mapping.
                    Mandatory.
    -remove         Remove a mapping.
    -remove-dn      Remove all mappings for a DN.
    -remove-user    Remove all mappings for a user.
    -username name  Unix user name to map or unmap.
    -dn "string"    Distinguished name.
                    Propagation fails if DN contains "fail".
    -dryrun         Don't actually do the database transaction.
                    No effect in this version.
    -debugging      Enable debugging output.

EOF
    exit 1;
} # Usage
