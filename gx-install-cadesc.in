#!%PERL%

# $Id: gx-install-cadesc.in,v 1.5 2006-11-06 01:51:45-08 kst Exp $
# $Source: /home/kst/gx-map-redacted/gx-install-cadesc.in,v $

########################################################################
# @Copyright@
#
# Copyright (c) 2006 The Regents of the University of California. All
# rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. All advertising materials mentioning features or use of this
# software must display the following acknowledgement: This product
# includes software developed by the Advanced Cyberinfrastructure
# Laboratory at the San Diego Supercomputer Center and its contributors.
#
# 4. Neither the name of the Center nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @Copyright@
########################################################################

########################################################################
# Developed by Keith Thompson <kst@sdsc.edu>
########################################################################

use strict;
use warnings;

use File::Basename ();
use Getopt::Long ();

sub Usage(@);
sub Backup($);
sub Debug(@);
sub Debugf(@);

# 
# Make warnings fatal.
# 
$SIG{__WARN__} = sub { die @_ };

my $Install_Dir;
BEGIN {
    $Install_Dir = '%INSTALL_DIR%';
    unshift @INC, "$Install_Dir/lib";
}
use Gridmap_Utils ();
use Cwd ();

my $Program_Name = File::Basename::basename $0;

my $User_Opt = { 'install-dir' => $Install_Dir };
my @Opts = ( $User_Opt,
             qw( help
                 version
                 install-dir=s
                 debugging! ) );
Getopt::Long::GetOptions @Opts or Usage;
Usage if $User_Opt->{help};
if ($User_Opt->{version}) {
    print "$Program_Name (gx-map) $Gridmap_Utils::VERSION\n";
    exit 0;
}
Usage if scalar @ARGV != 1;

my $tarball = $ARGV[0];

if ($tarball !~ /\.tar\.gz$/) {
    Usage "Invalid file name: $tarball\n";
}

if ($tarball !~ /^\//) {
    my $cwd = Cwd::cwd();
    $tarball = "$cwd/$tarball";
}

Gridmap_Utils::Install_Die_Handler;
Gridmap_Utils::Install_Warn_Handler;

Gridmap_Utils::Use_Commands 'gzip', 'tar';

my $dir = File::Basename::basename $tarball;
$dir =~ s/\.tar\.gz$//;

$| = 1;

chdir "$User_Opt->{'install-dir'}/etc/gx-map"
    or die "$User_Opt->{'install-dir'}: $!\n";

my $backup_ca_config_dir = undef;
if (-d 'ca-config') {
    $backup_ca_config_dir = Backup 'ca-config';
}

print "% gzip -d < $tarball | tar xf -\n";
my $result = system "gzip -d < $tarball | tar xf -";
die "Command failed\n" if $result != 0;
die "Directory $dir not created\n" if not -d $dir;

rename $dir, 'ca-config' or die "Renaming $dir to ca-config: $!\n";

if (defined $backup_ca_config_dir) {
    print <<"EOF";
Your existing directory
    $User_Opt->{'install-dir'}/etc/gx-map/ca-config
has been renamed to
    $User_Opt->{'install-dir'}/etc/gx-map/$backup_ca_config_dir
and a new directory has been created and populated in its place.

If you've created or customized any *.cadesc files, you can copy them
from the backup directory to the new ca-config directory.  If not,
you can remove the backup directory.
EOF
}

########################################################################

# 
# Given a time, return an ASCII UTC timestamp suitable for use
# in a file name, such as " 2006-09-15-022924Z".
#   
sub Timestamp_Of($) {
    my($time) = @_;
    my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) =  
        gmtime($time);
    return sprintf "%04d-%02d-%02d-%02d%02d%02dZ",
                   $year + 1900, $mon + 1, $mday, $hour, $min, $sec;
} # Timestamp_Of
    
# ----------------------------------------------------------------------
        
#   
# Rename the specified file by appending its last modification time to
# its name, returning the name of the backup (which may be ignored if
# it's not needed).  If file doesn't exist, return undef.  May be used  
# on directories as well as ordinary files.
#
sub Backup($) {
    my($filename) = @_;
    my @stat;   
    
    return undef if not -e $filename;
    my $timestamp = Timestamp_Of Gridmap_Utils::Get_mtime $filename;
    my $backup_name = "$filename-$timestamp";  
    rename $filename, $backup_name or die "$backup_name: $!\n";
    return $backup_name;
} # Backup

# ----------------------------------------------------------------------

sub Usage(@) {
    print @_ if @_;
    print <<"EOF";
Usage: $Program_Name [options] filename
The file must have a name ending in ".tar.gz".
Option names may be abbreviated.
    -help            : Display this message and exit.
    -version         : Display version information and exit.
    -install-dir dir : gx-map installation directory
                       Default is $Install_Dir
    -debugging       : Display debugging messages
EOF
    exit 1;
} # Usage

# ----------------------------------------------------------------------

sub Debug(@) {
    print @_ if $User_Opt->{debugging};
} # Debug

# ----------------------------------------------------------------------

sub Debugf(@) {
    printf @_ if $User_Opt->{debugging};
} # Debugf
