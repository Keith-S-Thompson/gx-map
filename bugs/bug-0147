# $Id: bug-0147,v 1.1 2007-04-27 20:17:35-07 kst Exp $
# $Source: /home/kst/gx-map-redacted/bugs/bug-0147,v $

gx-map bug 0147
Date: Fri 2007-04-27
Severity: Low
Reported by: Keith Thompson <kst@sdsc.edu>
Version: 0.5.3.2
Status: Fixed 0.5.3.2.016, 0.5.3.3
Title: Dir_Error() causes bad request errors

The Gridmap_Utils::Dir_Error() function detects whether the
new-requests directory allows non-root chown.  The older version of
this function does this by creating a temporary file and attempting to
chown it.  The problem: apparently in some cases the gx-check-requests
command can see thes temporary file; since it doesn't have a valid
name, it's treated as an invalid request.

A sample record from the errors.log file:

{
	ERRORS        Bad file name
	PROCESSED     1171921059.661377 Mon 2007-02-19 21:37:39 UTC
	REQUEST_FILE  tmp-1171921059-1377
}

The current version of the Dir_Error() function instead uses
POSIX::pathconf; since it doesn't create a temporary file, the error
doesn't occur.  (I wasn't aware of the bug when I fixed it.)

Fixed:
GX.pm.in 1.7
gx-map release 0.5.3.2.016
Retrofit:
Gridmap_Utils.pm.in 1.279.2.1
gx-map release 0.5.3.3
