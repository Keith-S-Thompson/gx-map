#!%PERL%

# $Id: gx-ingest.in,v 1.34 2007-07-16 18:02:16-07 kst Exp $
# $Source: /home/kst/gx-map-redacted/gx-ingest.in,v $

########################################################################
# @Copyright@
#
# Copyright (c) 2007 The Regents of the University of California. All
# rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. All advertising materials mentioning features or use of this
# software must display the following acknowledgement: This product
# includes software developed by the Advanced Cyberinfrastructure
# Laboratory at the San Diego Supercomputer Center and its contributors.
#
# 4. Neither the name of the Center nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @Copyright@
########################################################################

########################################################################
# Developed by Keith Thompson <kst@sdsc.edu>
########################################################################

use strict;
use warnings;

use File::Basename ();
use Getopt::Long ();

my $Install_Dir;
BEGIN { $Install_Dir = '%INSTALL_DIR%'; }
use lib "$Install_Dir/lib";
use GX ();
use GX_Request ();

sub Usage(@);

my $Program_Name = File::Basename::basename $0;

my $User_Opt = {};
my @Opts = ( $User_Opt,
             qw( help
                 version
                 direct! ) );
Getopt::Long::GetOptions @Opts or Usage;
Usage if $User_Opt->{help};

if ($User_Opt->{version}) {
    print "$Program_Name (gx-map) $GX::VERSION\n";
    exit 0;
}

GX::Set_Config;

my @requests = ();

my $comment = "Mapping generated by $Program_Name $GX::VERSION";

my %seen = ();

while (<>) {
    chomp;
    s/#.*$//;
    s/^\s+//;
    s/\s+$//;
    next if /^$/;
    my($dn, $users) = /^\s*("[^"]*")\s*(\S+)\s*$/;
    if (not defined $dn or not defined $users) {
        print "# >>> Can't parse line $.: $_\n";
    }
    else {
        #
        # Normally, only one user is specified, but it's also possible
        # to have a list of user name separated by commas.  In this case,
        # add them in reverse order; the most recently added is treated
        # as the default.
        #
        # We avoid duplicate mappings (common if the input grid-mapfile
        # is compatible with both GT2 and GT3/GT4) using the %seen hash.
        #
        $dn = GX::GT4_Subject $dn;
        my @users = reverse split /,/, $users;
        USER:
        foreach my $user (@users) {
            next if $seen{"$dn $user"}++;
            if (not GX::Is_Legal_Username $user) {
                print "# >>> Illegal user name \"$user\" on line $.\n";
                next USER;
            }
#           my $command = "\$gx_request -add -force ";
#           $command .= "-comment \"\$comment\" ";
#           $command .= sprintf "-username %-8s ", $user;
#           $command .= "-dn $dn";
#           print "$command\n";
            my $request = {};
            $request->{operation} = 'add';
            $request->{dn}        = $dn;
            $request->{username}  = $user;
            $request->{comment}   = $comment;
            push @requests, $request;
        }
    }
}

if ($User_Opt->{direct}) {
    foreach my $request (@requests) {
        my $dn = $request->{dn};
        if ($dn =~ /^"(.*)"$/) {
            $dn = $1;
        }
        GX_Request::GX_Request
            '-force',
            "-$request->{operation}",
            '-username', $request->{username},
            '-dn',       $dn,
            '-comment',  $request->{comment};
    }
}
else {
    print <<"EOF";
# Generated by gx-ingest (gx-map version $GX::VERSION).
# Feed this to "gx-request -slurp".
# Please check it carefully before running it.
# If you modify it, note that comments within records (delimited by
# "{" and "}" are not supported, or are end-of-line comments, but entire
# records can be commented out by placing a '#' character at the beginning
# of each line.

EOF
    GX::Write_Records '-multiple', '-', @requests;
}

########################################################################

sub Usage(@) {
    print @_ if @_;
    print <<EOF;
Usage: $Program_Name [options] [files]
    -help              : Display this message and exit.
    -version           : Display version information and exit.
    -direct            : Apply mappings directly.

Reads an existing grid-mapfile (from stdin if no name is specified).

By default, writes on stdout a formatted text file that can be
fed to "gx-request -slurp".  Be sure to check the generated script
carefully before running it.  If desired, this file can be edited
before submitting it.  The "gx-request" command must be run by
a privileged user (see GX_MAP_OWNER and ADDITIONAL_ADMINS in your
gx-map config file).

With the "-direct" option, each mapping is submitted automatically,
bypassing the "gx-request" command.  Again, this must be done by a
privileged user.

EOF
    exit 1;
}
