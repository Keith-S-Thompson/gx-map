#!%PERL% -w

# $Id: gx-remove-locks.in,v 1.1 2006-04-06 03:09:32-07 kst Exp $
# $Source: /home/kst/gx-map-redacted/gx-remove-locks.in,v $

########################################################################
# @Copyright@
#
# Copyright (c) 2006 The Regents of the University of California. All
# rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. All advertising materials mentioning features or use of this
# software must display the following acknowledgement: This product
# includes software developed by the Advanced Cyberinfrastructure
# Laboratory at the San Diego Supercomputer Center and its contributors.
#
# 4. Neither the name of the Center nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @Copyright@
########################################################################

########################################################################
# Developed by Keith Thompson <kst@sdsc.edu>
########################################################################

use strict;

use File::Basename ();
use Getopt::Long ();

my $Install_Dir;
BEGIN {
    $Install_Dir = '%INSTALL_DIR%';
    unshift @INC, "$Install_Dir/lib";
}
use Gridmap_Utils ();

sub Usage(@);

my $Program_Name = File::Basename::basename $0;

my $User_Opt = {};
my @Opts = ( $User_Opt,
             qw( help
                 version ) );
Getopt::Long::GetOptions @Opts or Usage;
Usage if $User_Opt->{help};

if ($User_Opt->{version}) {
    print "$Program_Name (gx-map) $Gridmap_Utils::VERSION\n";
    exit 0;
}

my $Data_Dir = "$Install_Dir/gx-map-data";

Gridmap_Utils::Check_Data_Dir;
Gridmap_Utils::Require_Owner $Program_Name;

opendir my $Dir_Handle, $Data_Dir or die "$Data_Dir: $!\n";
my @lock_files = sort grep /^\..*\.lock$/, readdir $Dir_Handle;
closedir $Dir_Handle;

if (not @lock_files) {
    print "No lock files in $Data_Dir\n";
    exit 0;
}

my @lock_info = ();
my $now = time;
foreach my $lock_file (@lock_files) {
    $lock_file = "$Data_Dir/$lock_file";
    my $ref = {};
    my $mtime = Gridmap_Utils::Get_mtime $lock_file;
    my $line = undef;
    $ref->{name} = $lock_file;
    if (defined $mtime) {
        my $delta = $now - $mtime;
        $ref->{modified} = "Modified at " .
                           Gridmap_Utils::Time_Image($mtime) .
                           " ($delta second(s) ago)\n";
    }
    if (open my $handle, '<', $lock_file) {
        my $line = scalar <$handle>;
        if (defined $line) {
            chomp $line;
            $ref->{line} = $line;
        }
        close $handle;
    }
    push @lock_info, $ref;
}

$| = 1;

foreach my $ref (@lock_info) {
    print "$ref->{name}:\n";
    if (defined $ref->{line}) {
        print "$ref->{line}\n";
    }
    if (defined $ref->{modified}) {
        print "$ref->{modified}\n";
    }
    print "\n";
    print "Remove? [yn] ";
    my $response = scalar <STDIN>;
    if ($response =~ /^y/i) {
        if (unlink $ref->{name}) {
            print "Removed.\n";
        }
        else {
            warn "$ref->{name}: $!\n";
        }
    }
}

########################################################################

sub Usage(@) {
    print @_ if @_;
    print <<EOF;
Usage: $Program_Name [options] [files]
    -help              : Display this message and exit.
    -version           : Display version information and exit.

Check the status of any lock files in the gx-map data directory,
and remove them on request.
EOF
    exit 1;
}
