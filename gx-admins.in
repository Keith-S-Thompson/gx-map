#!%PERL%

# $Id: gx-admins.in,v 1.14 2007-03-15 18:36:23-07 kst Exp $
# $Source: /home/kst/gx-map-redacted/gx-admins.in,v $

########################################################################
# @Copyright@
#
# Copyright (c) 2007 The Regents of the University of California. All
# rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. All advertising materials mentioning features or use of this
# software must display the following acknowledgement: This product
# includes software developed by the Advanced Cyberinfrastructure
# Laboratory at the San Diego Supercomputer Center and its contributors.
#
# 4. Neither the name of the Center nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @Copyright@
########################################################################

########################################################################
# Developed by Keith Thompson <kst@sdsc.edu>
########################################################################

use strict;
use warnings;

use File::Basename ();
use Getopt::Long ();

sub Usage(@);

my $Install_Dir;
BEGIN { $Install_Dir = '%INSTALL_DIR%'; }
use lib "$Install_Dir/lib";
use GX ();

my $Program_Name = File::Basename::basename $0;

my $User_Opt = {};
my @Opts = ( $User_Opt,
             qw( help version ) );
Getopt::Long::GetOptions @Opts or Usage;
Usage if $User_Opt->{help};

if ($User_Opt->{version}) {
    print "$Program_Name (gx-map) $GX::VERSION\n";
    exit 0;
}

Usage                            if scalar @ARGV !=1;
Usage "No file $ARGV[0]\n"       if not -e $ARGV[0];
Usage "$ARGV[0] is not a file\n" if not -f $ARGV[0];
Usage "Can't read $ARGV[0]\n"    if not -r $ARGV[0];

my @requests = GX::Read_Records '-multiple', $ARGV[0];
print "Got ", scalar @requests, " records\n";

my %admin_count = ();

foreach my $request (@requests) {
    if (defined $request->{OWNER_NAME}) {
        #
        # Check both "username" and the older "map_to_name", so we can
        # analyze logs from older versions.
        #
        if (defined $request->{username} and
            $request->{OWNER_NAME} ne $request->{username})
        {
            $admin_count{$request->{OWNER_NAME}} ++;
        }
        elsif (defined $request->{map_to_name} and
            $request->{OWNER_NAME} ne $request->{map_to_name})
        {
            $admin_count{$request->{OWNER_NAME}} ++;
        }
    }
}

foreach my $admin (sort keys %admin_count) {
    printf "%6d  %s\n", $admin_count{$admin}, $admin;
}

########################################################################

sub Usage(@) {
    print @_ if @_;
    print <<"EOF";
Usage: $Program_Name logfile
The logfile should be a gx-map "requests.log" file.
$Program_Name guesses which accounts are administrative accounts
by looking for requests where the "OWNER_NAME" and "username"
(or "map_to_name") fields don't match.
EOF
    exit 1;
} # Usage
