#!/bin/sh

# $Id: install-gx-map.in,v 1.91 2007-02-16 00:13:09-08 kst Exp $
# $Source: /home/kst/gx-map-redacted/install-gx-map.in,v $

########################################################################
# @Copyright@
#
# Copyright (c) 2007 The Regents of the University of California. All
# rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. All advertising materials mentioning features or use of this
# software must display the following acknowledgement: This product
# includes software developed by the Advanced Cyberinfrastructure
# Laboratory at the San Diego Supercomputer Center and its contributors.
#
# 4. Neither the name of the Center nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @Copyright@
########################################################################

########################################################################
# Developed by Keith Thompson <kst@sdsc.edu>
########################################################################

verbosely () {
    echo "% $@"
    "$@"
    if [ $? -ne 0 ] ; then exit 1 ; fi
}

INSTALL_DIR=%INSTALL_DIR%
BIN_DIR=$INSTALL_DIR/bin
SBIN_DIR=$INSTALL_DIR/sbin
LIB_DIR=$INSTALL_DIR/lib
ETC_DIR=$INSTALL_DIR/etc/gx-map
DOC_DIR=$INSTALL_DIR/doc
MAN_DIR=$INSTALL_DIR/man
DATA_DIR=%DATA_DIR%
GX_MAP_OWNER=%GX_MAP_OWNER%
GX_PROPAGATE=%GX_PROPAGATE%
EXTRAS=%EXTRAS%

whoami="`whoami`"
if [ "$whoami" = "" ] ; then
    whoami="$LOGNAME"
fi
if [ "$whoami" = "" ] ; then
    whoami="$USER"
fi
if [ "$whoami" = "" ] ; then
    echo ">>> Can't determine user name" 1>&2
    echo '    (tried whoami, $LOGNAME, $USER)' 1>&2
    exit 1
fi
if [ "$whoami" != "$GX_MAP_OWNER" ] ; then
    echo ">>> Installation must be done by the GX_MAP_OWNER ($GX_MAP_OWNER)" 1>&2
    exit 1
fi

BIN_FILES="gx-map gx-request"
SBIN_FILES="gx-admins gx-ca-update gx-check-index gx-check-requests gx-cleanup-logs gx-convert-log gx-cron-job gx-gen-mapfile gx-ingest gx-install-cadesc gx-remove-locks gx-util-test gx-watch-locks"
OPTIONAL_SBIN_FILES="gx-db-check-requests gx-db-dump gx-db-request gx-propagate"
RESTRICTED_SBIN_FILES="gx-ca-update gx-check-index gx-check-requests gx-cron-job gx-db-check-requests gx-db-dump gx-db-request gx-propagate gx-remove-locks"
LIB_FILES="GX.pm"
ETC_FILES="LICENSE README README.TeraGrid README.Upgrade Relnotes auto.txt"

for dir in $INSTALL_DIR \
           $BIN_DIR \
           $SBIN_DIR \
           $LIB_DIR \
           $ETC_DIR \
           $DOC_DIR \
           $MAN_DIR \
           $MAN_DIR/man1 \
           $MAN_DIR/man3 \
           $MAN_DIR/man5 \
           $MAN_DIR/man7 \
           $MAN_DIR/man8 \
           $DATA_DIR \
           $DATA_DIR/RCS \
           $DATA_DIR/cache \
           $DATA_DIR/cache/errors \
           $DATA_DIR/reported-errors \
           $DATA_DIR/ca-index \
           $DATA_DIR/ca-index/RCS
do
    if [ ! -d $dir ] ; then
        verbosely mkdir -p  $dir
        verbosely chmod 755 $dir
    fi
done

if [ "$EXTRAS" = "TGCDB" ] ; then
    for dir in $DATA_DIR/new-db-requests \
               $DATA_DIR/old-db-requests
    do
        if [ ! -d $dir ] ; then
            verbosely mkdir -p  $dir
            verbosely chmod 755 $dir
        fi
    done
fi

# verbosely touch $DATA_DIR/requests.log
if [ -f $DATA_DIR/requests.log ] ; then
    echo $DATA_DIR/requests.log already exists
else
    echo '# $Id'':$' > $DATA_DIR/requests.log
    echo '# $Source'':$' >> $DATA_DIR/requests.log
    echo '' >> $DATA_DIR/requests.log
    verbosely cat $DATA_DIR/requests.log
    verbosely chmod %REQUESTS_LOG_PERMISSIONS% $DATA_DIR/requests.log
fi

for file in $BIN_FILES ; do 
    verbosely cp -f $file  $BIN_DIR/.
done
for file in $SBIN_FILES ; do
    verbosely cp -f $file $SBIN_DIR/.
done
for file in $OPTIONAL_SBIN_FILES ; do
    if [ -f $file ] ; then
        verbosely cp -f $file $SBIN_DIR/.
    fi
done
for file in $RESTRICTED_SBIN_FILES ; do
    if [ -f $SBIN_DIR/$file ] ; then
        verbosely chmod 744 $SBIN_DIR/$file
    fi
done
for file in $LIB_FILES ; do
    verbosely cp -f $file  $LIB_DIR/.
done
for file in $ETC_FILES ; do
    verbosely cp -f $file  $ETC_DIR/.
done
if [ "$GX_PROPAGATE" = "gx-propagate.in.teragrid" -o  \
     "$EXTRAS" = "TGCDB" ]
then
    verbosely cp -f tgcdb.db-config $ETC_DIR/.
    verbosely chmod 600 $ETC_DIR/tgcdb.db-config
fi
for file in doc/*.pod ; do
    verbosely cp -p $file $DOC_DIR/.
done
for section in 1 3 5 7 8 ; do
    for file in doc/*.$section ; do
        if [ -f "$file" ] ; then
            verbosely cp -f $file $MAN_DIR/man$section/.
        fi
    done
done
# #
# # There are a *lot* of *.cadesc files.  To avoid possible problems with
# # overly long command lines, don't store all the names in a variable.
# #
# ls ca | grep '\.cadesc$' | \
#     while read file ; do
#         verbosely cp -f ca/$file $ETC_DIR/ca-config/.
#     done
if [ -r .config-file ] ; then
    config_file=`cat .config-file`
    config_file_basename=`basename $config_file`
    echo "Copying $config_file"
    (
        echo "########################################################################"
        echo "# THIS COPY OF THE CONFIGURATION FILE IS INCLUDED HERE FOR REFERENCE.  #"
        echo "# MODIFYING THIS COPY WILL HAVE NO EFFECT ON THE BEHAVIOR OF GX-MAP.   #"
        echo "########################################################################"
        echo ""
        cat $config_file
    ) > $ETC_DIR/$config_file_basename
fi

if [ ! -d $DATA_DIR/new-requests ] ; then
    verbosely mkdir -p   $DATA_DIR/new-requests
    verbosely chmod 1733 $DATA_DIR/new-requests
fi

if [ ! -h $INSTALL_DIR/gx-map-data ] ; then
    verbosely ln -s -f $DATA_DIR $INSTALL_DIR/gx-map-data
fi

cadesc_tarball=`echo gx-map-cadesc-????-??-??.tar.gz`
if [ ! -f "$cadesc_tarball" ] ; then
    echo "Can't find cadesc tarball" 1>&2
    exit 1
fi
verbosely $SBIN_DIR/gx-install-cadesc -primary $cadesc_tarball

if [ "$GX_PROPAGATE" = "gx-propagate.in.teragrid" ] ; then
    cat <<EOF
########################################################################
IMPORTANT:
You must edit
$ETC_DIR/tgcdb.db-config
before enabling gx-map's interaction with the TeraGrid Central Database.
########################################################################
EOF
fi
