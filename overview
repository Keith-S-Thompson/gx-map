# $Id: overview,v 1.1 2003-11-17 17:50:24-08 kst Exp $
# $Source: /home/kst/gx-map-redacted/overview,v $

gx-map is a system for automated maintenance of grid-mapfiles.
A grid-mapfile (normally in /etc/grid-security) is a plain text file
that specifies mappings of Distinguished Names (DNs) to local Unix
account names.

The system is implemented as a set of Perl programs.  One of these
may be invoked by any user; the others are executed from cron jobs
under a privileged account.

The user interface to the gx-map system is the "gx-map" command.
Normally a user will run this command with the "-interactive" option
and follow the prompts.  It can also accept information through
command-line arguments.

The gx-map command collects several pieces of information from the
user, and creates a request file in a world-writable "new-requests"
directory.  The information in the request file includes:
    A timestamp
    The user's user name and numeric UID
    The DN to be mapped to the user name
    The kind of operation (typically "add" or "remove")
    An optional e-mail address
    An optional comment
This is a plain text file, designed to be human-readable and easy to
parse.  The optional information is logged but is not used by gx-map.

During installation, a set of administrative users can be specified,
either individual accounts or Unix groups.  (At SDSC, user "globus"
is the only administrative user.  Other sites may prefer to use
"root".)  An ordinary user may request a mapping of any DN to his
own user name.  An administrative user may request a mapping of any
DN to any user name.

Note that the gx-map program itself is not privileged.  A user could
create a modified copy of the gx-map command and use it to forge an
invalid request file.  The other pieces of the system are designed
to guard against this.

The "gx-check-requests" command is executed from a cron job by an
administrative user, typically every 5 minutes.  This command checks
for new request files in the new-requests directory.  For each
new request, gx-check-requests validates it.  A request file is
considered valid if it is owned by an administrative account or by
the user specified in the request, and if it has all the necessary
information.  For a valid request, an annotated request file is
written to a "good-requests" directory and the request is appended
to the "requests.log" file.  For an invalid request, the annotated
request file is written to the "bad-requests" directory, and nothing
is appended to "requests.log".  Request files in the "good-requests"
and "bad-requests" directories are not further processed.

The gx-map system's security depends critically on verifying the
ownership of a request file.  If the operating system allows non-root
users to "give away" files (e.g., "chown somebody-else some-file"),
this breaks down.  A user "foo" could create a forged request file
mapping foo's DN to account "bar", then change the ownership of
the request file to "bar".  gx-check-requests would then think the
request was generated by "bar".  HP-UX is the only system I know
of that allows this by default; I *think* that it's not allowed for
NFS-mounted filesystems.

Finally, the "gx-gen-mapfile" command is executed from a cron job
by an administrative user, typically every 5 minutes.  This command
reads the requests.log file into an internal data structure, sorts
it by timestamp, and traverses the requests in chronological order,
generating a new grid-mapfile from scratch.  (This means that
any changes manually added to the grid-mapfile will be clobbered
on the next update.)  Multiple request logs can be specified on
the command line, either as file names or as ftp or http URLs.
A copy of the SDSC requests log is visible on ftp.sdsc.edu, making
it visible to systems such as the TeraGrid clusters that can't see
the NFS-mounted file system where it's stored (/projects/globus).
The update is performed only if either one of the input request
logs or the /etc/passwd file is newer than the target grid-mapfile.
gx-gen-mapfile writes the new grid-mapfile to a temporary file in the
same directory as the actual target grid-mapfile, then renames it;
this is intended to make the update as nearly atomic as possible.

One thing that's been difficult is propagating information across
administrative domains.  There's no good general way to confirm
whether user "jsmith" at one site is the same person as user "jsmith"
(or "johns") at another site.

gx-map has a concept of a "namespace", which is a mapping of Unix
account names to people.  (The next release will require consistent
numeric UIDs as well.)  Each request has a namespace identifier
assigned to it by gx-check-requests.  The gx-gen-mapfile command
normally accepts any mapping that matches the namespace of the system
on which it's running; a customizable module handles mappings from
other namespaces.  I currently have a partial mapping for SDSC and
NCSA, and I'm working on a TeraGrid-wide user mapping database that
will be used by the next version of gx-map.  Eventually it will
use the official TeraGrid user database, once it's been created.
If gx-map doesn't have enough information, it's always possible to
request the mapping individually at each site.

A separate cron job, not part of the core gx-map system, periodically
checks for updates in the CACL ca.db.index file and invokes gx-map
to add mappings new certificates or to remove mappings for expired
or revoked certificates.  This means that a user can run the "cacl"
command and automatically obtain a certificate and have it added to
grid-mapfiles on multiple systems, all without manual intervention
by an administrator.
